# -*- coding: utf-8 -*-

#%%
"""
This script has the following tasks:
    1- Reads the geometry from an stl file
    2- Computes the bounding box
    3- Assigns the structured mesh parameters to Abaqus
    4- Performs the inside outside test on the elements generated by Abaqus
    5- Performs QuadTree for the Cut elements
    6- Computes Stiffness Matrix of Cut elements

"""
#%%

import os
from stl import mesh
from matplotlib import pyplot as plt
import Reconstructing_Physical_Domain as Utilities
import Perfom_Inside_Outside_Test as Membership
from Perform_QT_and_cal_K import Perform_QuadTree_And_Generate_K

#%%

def main():
    """
    Main function 
    
    """
    plt.close('all')
    print('FCM Main Program Started \n')
    ###############################################################################
    """Read from Stl file"""
    ##############################################################################
    
    # Read_from_Stl(stl_filename,mesh_filename):
    stl_filename = 'Plate_with_hole.stl'    # For changing geometry, change the file name
    mesh_filename = 'Mesh_parameters.txt'   # Do not change this file's name
    
    # Creating object by reading the stl file    
    os.chdir("../Stl Files")
    My_geometry = mesh.Mesh.from_file(stl_filename)
    os.chdir("../Python Scripts")
    
    # Number of divsions for structured mesh generations
    number_of_divisions= 15
    
    # List of triangles from stl file
    Triangle_List = My_geometry.vectors
    No_Triangles = len (My_geometry.vectors)
    
    ##############################################################################
    """Compute the Bounding Box"""
    ##############################################################################    
    
    Utilities.Compute_Bounding_Box(My_geometry)
    
    ##############################################################################
    """ Visualize Geometry by stl file triangles"""
    ##############################################################################
    
    # Looping over all the elements and plotting them within the bounding box
    Utilities.Visualize_stl_Geometry(No_Triangles,Triangle_List)
    
    ##############################################################################
    """ Output the necessary parameters to create structured mesh in Abaqus"""
    ##############################################################################
    
    # Writing structured mesh parameters to the abaqus input file   
    Utilities.write_structured_mesh_param(mesh_filename,My_geometry,No_Triangles,number_of_divisions)
    
    ###############################################################################
    """ Reconstruct the Physical Domain using shapely library"""
    ###############################################################################
    
    Phy_domain = Utilities.Compute_physical_domain(Triangle_List)
    
    ###############################################################################
    """ Reading Element & Nodal lists generated in Abaqus"""
    ###############################################################################
    
    # Reading Element List
    Element_list = Membership.Read_Element_List()
    
    # Reading Nodal List
    Node_list = Membership.Read_Nodal_List()
    
    ###############################################################################
    """ Perform_inside_outside_test to Elements """
    ###############################################################################
    
    Updated_Element_list = Membership.In_or_out(My_geometry,Element_list,Node_list,Phy_domain)
    
    ###############################################################################
    """ Perform_QuadTree_To_Cut_Cells & Evaluate Stiffness Matrices """
    ###############################################################################
    
    Perform_QuadTree_And_Generate_K (Updated_Element_list, Element_list, Node_list, Phy_domain)
    
    ###############################################################################
    print('FCM Main Program Terminated')   
#%%

main()

#%%